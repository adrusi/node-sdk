{"version":3,"sources":["../src/TransloaditClient.js"],"names":["reqr","global","GENTLY","hijack","require","request","crypto","_","fs","retry","PaginationStream","unknownErrMsg","TransloaditClient","opts","useSsl","authKey","Error","authSecret","_authKey","_authSecret","_service","service","_region","region","_protocol","_streams","_lastUsedAssemblyUrl","name","stream","pause","path","createReadStream","on","err","console","error","addStream","cb","params","fields","callback","called","result","_serviceUrl","requestOpts","url","method","timeout","streams","label","push","sendRequest","_remoteJson","left","ok","message","ncompleted","streamErrCb","length","Array","from","access","F_OK","R_OK","assemblyId","getAssembly","assembly_url","notifyUrl","pageno","listAssemblyNotifications","extend","page","listAssemblies","retryOpts","retries","factor","minTimeout","maxTimeout","operation","attempt","mainError","assembly_ssl_url","templateId","listTemplates","month","jsonParams","_prepareParams","signature","_calcSignature","toSign","createHmac","update","Buffer","digest","req","sigData","calcSignature","form","append","key","val","isObject","isArray","JSON","stringify","each","value","indexOf","encodeURIComponent","auth","expires","_getExpiresDate","expiresDate","Date","setDate","getDate","toISOString","__remoteJson","warn","info","retryIn","_timeouts","unshift","_appendParamsToUrl","uri","headers","body","statusCode","parse","e","abbr","substr","msg","_appendForm","module","exports"],"mappings":"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","file":"TransloaditClient.js","sourcesContent":["const reqr             = global.GENTLY ? GENTLY.hijack(require) : require\nconst request          = reqr('request')\nconst crypto           = reqr('crypto')\nconst _                = reqr('underscore')\nconst fs               = reqr('fs')\nconst retry            = reqr('retry')\nconst PaginationStream = reqr('./PaginationStream')\n\nlet unknownErrMsg  = 'Unknown error. Please report this at '\nunknownErrMsg += 'https://github.com/transloadit/node-sdk/issues/new?title=Unknown%20error'\n\nclass TransloaditClient {\n  constructor (opts = {}) {\n    if (opts.useSsl == null) { opts.useSsl = true }\n\n    if (opts.authKey == null) {\n      throw new Error('Please provide an authKey')\n    }\n\n    if (opts.authSecret == null) {\n      throw new Error('Please provide an authSecret')\n    }\n\n    this._authKey    = opts.authKey\n    this._authSecret = opts.authSecret\n    this._service    = opts.service || 'api2.transloadit.com'\n    this._region     = opts.region || 'us-east-1'\n    this._protocol   = opts.useSsl ? 'https://' : 'http://'\n    this._streams    = {}\n\n    this._lastUsedAssemblyUrl = ''\n  }\n\n  addStream (name, stream) {\n    stream.pause()\n    return (this._streams[name] = stream)\n  }\n\n  addFile (name, path) {\n    const stream = fs.createReadStream(path)\n    stream.on('error', (err) => {\n      // handle the error event to avoid the error being thrown\n      console.error(err)\n    })\n    return this.addStream(name, stream)\n  }\n\n  getLastUsedAssemblyUrl () {\n    return this._lastUsedAssemblyUrl\n  }\n\n  createAssembly ({params, fields}, cb) {\n    let stream\n    const callback = cb\n    let called = false\n    cb = (err, result) => {\n      if (!called) {\n        called = true\n        return callback(err, result)\n      }\n    }\n\n    this._lastUsedAssemblyUrl = `${this._serviceUrl()}/assemblies`\n\n    const requestOpts = {\n      url    : this._lastUsedAssemblyUrl,\n      method : 'post',\n      timeout: 24 * 60 * 60 * 1000, // 1 day\n      params : params || {},\n      fields : fields || {},\n    }\n\n    const streams = ((() => {\n      const result = []\n      for (let label in this._streams) {\n        stream = this._streams[label]\n        result.push(stream)\n      }\n      return result\n    })())\n\n    const sendRequest = () => {\n      return this._remoteJson(requestOpts, (err, result) => {\n        // reset streams so they do not get used again in subsequent requests\n        let left\n        this._streams = {}\n\n        if (err) {\n          return cb(err)\n        }\n\n        if (result && result.ok) {\n          return cb(null, result)\n        }\n\n        err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n        return cb(err)\n      }\n      )\n    }\n\n    let ncompleted = 0\n    const streamErrCb = err => {\n      if (err != null) {\n        return cb(err)\n      }\n\n      if (++ncompleted === streams.length) {\n        return sendRequest()\n      }\n    }\n\n    for (stream of Array.from(streams)) {\n      stream.on('error', cb)\n\n      if (stream.path == null) {\n        streamErrCb(null)\n        continue\n      }\n\n      fs.access(stream.path, fs.F_OK | fs.R_OK, err => {\n        if (err != null) {\n          return streamErrCb(err)\n        }\n\n        return streamErrCb(null)\n      })\n    }\n\n    // make sure sendRequest gets called when there are now @_streams\n    if (streams.length === 0) {\n      return sendRequest()\n    }\n  }\n\n  deleteAssembly (assemblyId, cb) {\n    return this.getAssembly(assemblyId, (err, {assembly_url}) => {\n      if (err != null) {\n        return cb(err)\n      }\n\n      const opts = {\n        url    : assembly_url,\n        timeout: 5000,\n        method : 'del',\n        params : {},\n      }\n\n      return this._remoteJson(opts, cb)\n    }\n    )\n  }\n\n  replayAssembly ({assemblyId, notifyUrl}, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/assemblies/${assemblyId}/replay`,\n      method: 'post',\n    }\n\n    if (notifyUrl != null) {\n      requestOpts.params =\n        {notifyUrl}\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  replayAssemblyNotification ({assemblyId, notifyUrl}, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/assembly_notifications/${assemblyId}/replay`,\n      method: 'post',\n    }\n\n    if (notifyUrl != null) {\n      requestOpts.params =\n        {notifyUrl}\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  listAssemblyNotifications (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/assembly_notifications`,\n      method: 'get',\n      params: params || {},\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  streamAssemblyNotifications (params) {\n    return new PaginationStream((pageno, cb) => {\n      return this.listAssemblyNotifications(_.extend({}, params, {page: pageno}), cb)\n    }\n    )\n  }\n\n  listAssemblies (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/assemblies`,\n      method: 'get',\n      params: params || {},\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  streamAssemblies (params) {\n    return new PaginationStream((pageno, cb) => {\n      return this.listAssemblies(_.extend({}, params, {page: pageno}), cb)\n    }\n    )\n  }\n\n  getAssembly (assemblyId, cb) {\n    const opts =\n      {url: this._serviceUrl() + `/assemblies/${assemblyId}`}\n\n    const retryOpts = {\n      retries   : 5,\n      factor    : 3.28,\n      minTimeout: 1 * 1000,\n      maxTimeout: 8 * 1000,\n    }\n\n    const operation = retry.operation(retryOpts)\n    return operation.attempt(attempt => {\n      return this._remoteJson(opts, (err, result) => {\n        if (err != null) {\n          if (operation.retry(err)) {\n            return\n          }\n\n          return cb(operation.mainError())\n        }\n\n        if ((result.assembly_url == null) || (result.assembly_ssl_url == null)) {\n          if (operation.retry(new Error('got incomplete assembly status response'))) {\n            return\n          }\n\n          return cb(operation.mainError())\n        }\n\n        return cb(null, result)\n      })\n    }\n    )\n  }\n\n  createTemplate (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates`,\n      method: 'post',\n      params: params || {},\n    }\n\n    return this._remoteJson(requestOpts, (err, result) => {\n      let left\n      if (err) {\n        return cb(err)\n      }\n\n      if (result && result.ok) {\n        return cb(null, result)\n      }\n\n      err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n      return cb(err)\n    })\n  }\n\n  editTemplate (templateId, params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates/${templateId}`,\n      method: 'put',\n      params: params || {},\n    }\n\n    return this._remoteJson(requestOpts, (err, result) => {\n      let left\n      if (err) {\n        return cb(err)\n      }\n\n      if (result && result.ok) {\n        return cb(null, result)\n      }\n\n      err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n      return cb(err)\n    })\n  }\n\n  deleteTemplate (templateId, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/templates/${templateId}`,\n      method: 'del',\n      params: {},\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  getTemplate (templateId, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates/${templateId}`,\n      method: 'get',\n      params: {},\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  listTemplates (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates`,\n      method: 'get',\n      params: params || {},\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  streamTemplates (params) {\n    return new PaginationStream((pageno, cb) => {\n      return this.listTemplates(_.extend({}, params, {page: pageno}), cb)\n    }\n    )\n  }\n\n  getBill (month, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/bill/${month}`,\n      method: 'get',\n      params: {},\n    }\n\n    return this._remoteJson(requestOpts, cb)\n  }\n\n  calcSignature (params) {\n    const jsonParams = this._prepareParams(params)\n    const signature  = this._calcSignature(jsonParams)\n\n    return {signature, params: jsonParams}\n  }\n\n  _calcSignature (toSign) {\n    return crypto\n      .createHmac('sha1', this._authSecret)\n      .update(new Buffer(toSign, 'utf-8'))\n      .digest('hex')\n  }\n\n  // Sets the multipart/form-data for POST, PUT and DELETE requests, including\n  // the streams, the signed params, and any additional fields.\n  _appendForm (req, params, fields) {\n    const sigData    = this.calcSignature(params)\n    const jsonParams = sigData.params\n    const { signature }  = sigData\n    const form       = req.form()\n\n    form.append('params', jsonParams)\n\n    if (fields == null) { fields = [] }\n\n    for (let key in fields) {\n      let val = fields[key]\n      if (_.isObject(fields[key]) || _.isArray(fields[key])) {\n        val = JSON.stringify(fields[key])\n      }\n\n      form.append(key, val)\n    }\n\n    form.append('signature', signature)\n\n    return _.each(this._streams, (value, key) => form.append(key, value))\n  }\n\n  // Implements HTTP GET query params, handling the case where the url already\n  // has params.\n  _appendParamsToUrl (url, params) {\n    const sigData    = this.calcSignature(params)\n    const { signature }  = sigData\n    let jsonParams = sigData.params\n\n    if (url.indexOf('?') === -1) {\n      url += `?signature=${signature}`\n    } else {\n      url += `&signature=${signature}`\n    }\n\n    jsonParams = encodeURIComponent(jsonParams)\n    url += `&params=${jsonParams}`\n\n    return url\n  }\n\n  // Responsible for including auth parameters in all requests\n  _prepareParams (params) {\n    if (params == null) {              params = {} }\n    if (params.auth == null) {         params.auth = {} }\n    if (params.auth.key == null) {     params.auth.key = this._authKey }\n    if (params.auth.expires == null) { params.auth.expires = this._getExpiresDate() }\n\n    return JSON.stringify(params)\n  }\n\n  _getExpiresDate () {\n    const expiresDate = new Date()\n    expiresDate.setDate(expiresDate.getDate() + 1)\n    return expiresDate.toISOString()\n  }\n\n  _serviceUrl () {\n    return this._protocol + this._service\n  }\n\n  // Wrapper around __remoteJson which will retry in case of error\n  _remoteJson (opts, cb) {\n    const operation = retry.operation({\n      retries   : 5,\n      factor    : 3.28,\n      minTimeout: 1 * 1000,\n      maxTimeout: 8 * 1000,\n    })\n\n    return operation.attempt(() => {\n      return this.__remoteJson(opts, (err, result) => {\n        if ((err != null) && (err.error === 'RATE_LIMIT_REACHED')) {\n          console.warn(`Rate limit reached, retrying request in ${err.info.retryIn} seconds.`)\n          // FIXME uses private internals of node-retry\n          operation._timeouts.unshift(1000 * err.info.retryIn)\n          return operation.retry(err)\n        }\n\n        if (operation.retry(err)) {\n          return\n        }\n\n        let mainError = null\n        if (err) {\n          mainError = operation.mainError()\n        }\n\n        return cb(mainError, result)\n      })\n    }\n    )\n  }\n\n  // Responsible for making API calls. Automatically sends streams with any POST,\n  // PUT or DELETE requests. Automatically adds signature parameters to all\n  // requests. Also automatically parses the JSON response.\n  __remoteJson (opts, cb) {\n    const timeout = opts.timeout || 5000\n    let url     = opts.url || null\n    const method  = opts.method || 'get'\n\n    if (!url) {\n      const err = new Error('No url provided!')\n      return cb(err)\n    }\n\n    if ((method === 'get') && (opts.params != null)) {\n      url = this._appendParamsToUrl(url, opts.params)\n    }\n\n    const requestOpts = {\n      uri: url,\n      timeout,\n    }\n\n    if (opts.headers != null) {\n      requestOpts.headers = opts.headers\n    }\n\n    const req = request[method](requestOpts, (err, {body, statusCode}) => {\n      if (err) {\n        return cb(err)\n      }\n\n      // parse body\n      let result = null\n      try {\n        result = JSON.parse(body)\n      } catch (e) {\n        const abbr  = `${body}`.substr(0, 255)\n        let msg   = `Unable to parse JSON from '${requestOpts.uri}'. `\n        msg  += `Code: ${statusCode}. Body: ${abbr}. `\n        return cb(new Error(msg))\n      }\n\n      if (statusCode !== 200) {\n        return cb(_.extend((new Error()), result))\n      }\n\n      return cb(null, result)\n    })\n\n    if ((method === 'post') || (method === 'put') || (method === 'del')) {\n      return this._appendForm(req, opts.params, opts.fields)\n    }\n  }\n}\n\nmodule.exports = TransloaditClient\n"]}